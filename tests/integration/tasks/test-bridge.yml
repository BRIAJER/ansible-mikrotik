---
- name: Add bridge1
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    name:     "{{ item }}"
    state:    present
    arp:      proxy-arp
  with_items:
    - "bridge1"

- name: Add bridge1 again (idempotency test)
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    name:     "{{ item }}"
    state:    present
    arp:      proxy-arp
  with_items:
    - "bridge1"
  register: mod_bridge1
  failed_when: (
      not ansible_check_mode
    ) and (
      ( mod_bridge1 | changed )
    )

# bridge ports depend on bridge being created first

- name: Add interface to bridge1 (port)
  mt_interface_bridge_port:
    hostname:   "{{ mt_hostname }}"
    username:   "{{ mt_user }}"
    password:   "{{ mt_pass }}"
    bridge:     "{{ item[0] }}"
    interface:  "{{ item[1] }}"
    state:      present
  with_nested:
    - [ "bridge1" ]
    - [ "ether8" ]

- name: Add interface to bridge1 (port) again (idempotency test)
  mt_interface_bridge_port:
    hostname:   "{{ mt_hostname }}"
    username:   "{{ mt_user }}"
    password:   "{{ mt_pass }}"
    bridge:     "{{ item[0] }}"
    interface:  "{{ item[1] }}"
    state:      present
  with_nested:
    - [ "bridge1" ]
    - [ "ether8" ]
  register: mod_bridge1_port
  failed_when: (
      not ansible_check_mode
    ) and (
      ( mod_bridge1_port | changed )
    )

- name: Add additional param to bridge port
  mt_interface_bridge_port:
    hostname:   "{{ mt_hostname }}"
    username:   "{{ mt_user }}"
    password:   "{{ mt_pass }}"
    bridge:     "{{ item[0] }}"
    interface:  "{{ item[1] }}"
    edge:       "{{ item[2] }}"
    state:      present
  with_nested:
    - [ "bridge1" ]
    - [ "ether8" ]
    - [ "yes-discover" ]

- name: ALWAYS_CHANGES Add 2nd interface to bridge1 port
  mt_interface_bridge_port:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    bridge:     bridge1
    interface: ether7
    state:    present
  with_nested:
    - [ "bridge1" ]
    - [ "ether7" ]
  register: bridge1_add_2nd_inter
  failed_when: (
      not ansible_check_mode
    ) and (
      not ( bridge1_add_2nd_inter | changed )
    )

- name: ALWAYS_CHANGES Remove 2nd interface to bridge1 port
  mt_interface_bridge_port:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    bridge:     bridge1
    interface:  ether7
    state:      absent
  with_nested:
    - [ "bridge1" ]
    - [ "ether7" ]
  register: bridge1_rem_2nd_inter
  failed_when: (
      not ansible_check_mode
    ) and (
      not ( bridge1_rem_2nd_inter | changed )
    )

- name: Add bridge2
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    state:    present
    name:     "{{ item.key }}"
    arp:      "{{ item.value.arp }}"
  with_dict:
    bridge2:
      arp: "reply-only"


- name: Adjust settings
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    #state:    present
    settings:
      allow-fast-path: yes
      use-ip-firewall-for-vlan: yes
      use-ip-firewall-for-pppoe: no

- name: Adjust settings (test changes)
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    #state:    present
    settings:
      allow-fast-path: yes
      use-ip-firewall-for-vlan: no
      use-ip-firewall-for-pppoe: no
  register: bridge_settings_1
  failed_when: (
      not ansible_check_mode
    ) and (
      not ( bridge_settings_1 | changed )
    )

- name: Adjust settings again (idempotency test)
  mt_interface_bridge:
    hostname: "{{ mt_hostname }}"
    username: "{{ mt_user }}"
    password: "{{ mt_pass }}"
    #state:    present
    settings:
      allow-fast-path: yes
      use-ip-firewall-for-vlan: no
      use-ip-firewall-for-pppoe: no
  register: bridge_settings_2
  failed_when: (
      not ansible_check_mode
    ) and (
      ( bridge_settings_2 | changed )
    )
